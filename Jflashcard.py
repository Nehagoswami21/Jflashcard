# -*- coding: utf-8 -*-
"""Jflashcard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wz08N5X8kN1gYaAHkheTseWifJ4PB-bE
"""

from google.colab import files

# Upload your file — wait until it finishes (100%)
uploaded = files.upload()

import os
os.rename("archive (2).zip", "archive.zip")

import zipfile

with zipfile.ZipFile("archive.zip", "r") as zip_ref:
    zip_ref.extractall("data")

import os

for filename in os.listdir("data"):
    print(filename)

from gtts import gTTS
import IPython.display as ipd

def play_audio(text, lang='ja'):
    tts = gTTS(text=text, lang=lang)
    tts.save("audio.mp3")
    return ipd.Audio("audio.mp3")

import csv
import random
import difflib  # For fuzzy matching

# 👇 Ask user for JLPT level
level = input("Which JLPT level? (n5, n4, n3, etc): ").strip().lower()
target_jlpt_level = level

# 📦 Load flashcard data
flashcards = {}

with open("data/words.tsv", encoding="utf-8") as tsvfile:
    reader = csv.DictReader(tsvfile, delimiter="\t")
    for row in reader:
        tags = row.get("tags", "").strip().lower()
        if target_jlpt_level not in tags:
            continue

        word = row.get("word or phrase", "").strip()
        kana = row.get("kana", "").strip()
        translation = row.get("translation", "").strip().lower()
        example = row.get("example of usage", "").strip()

        if word and translation:
            flashcards[word] = {
                "kana": kana,
                "translation": translation,
                "example": example
            }

# 🎮 Start flashcard game
if not flashcards:
    print("⚠️ No flashcards found for the selected level. Try a different JLPT level.")
else:
    print(f"\n👋 Welcome to the Japanese Flashcard App! (JLPT {target_jlpt_level.upper()})")
    print("Type the English meaning of the word. Type 'exit' to quit.\n")

    while True:
        word = random.choice(list(flashcards.keys()))
        data = flashcards[word]

        print(f"\nWhat is the meaning of '{word}' ({data['kana']})?")
        display(play_audio(data["kana"]))
        answer = input("Your answer: ").strip().lower()

        if answer == "exit":
            print("Thanks for playing! またね！👋")
            break

        translation = data["translation"]

        if answer in translation:
            print("✅ Correct!\n")
        else:
            similarity = difflib.SequenceMatcher(None, answer, translation).ratio()
            if similarity > 0.7:
                print(f"🟡 Almost correct! The correct answer is '{translation}'.")
            else:
                print(f"❌ Incorrect. The correct answer is '{translation}'.")

            if data["example"]:
                print(f"📘 Example: {data['example']}\n")
            else:
                print()

with open("data/words.tsv", encoding="utf-8") as tsvfile:
    reader = csv.DictReader(tsvfile, delimiter="\t")
    for i, row in enumerate(reader):
        print(row["tags"])
        if i == 10:
            break

import csv

with open("data/words.tsv", encoding="utf-8") as tsvfile:
    reader = csv.reader(tsvfile, delimiter="\t")
    headers = next(reader)
    print(headers)

!pip install gTTS
from gtts import gTTS
import IPython.display as ipd
import os

display(play_audio("さむい"))
